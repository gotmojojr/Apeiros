import pandas as pd
import warnings
import statsmodels.api as sm
import numpy as np
warnings.filterwarnings('ignore')

path = r"C:\Users\EDANIX_1\Downloads\Historical Data Cleaned.xlsx"
df = pd.read_excel(path)

data = np.array(df['Revenue'])
size = int(len(data)*0.85)
data_train = data[:size]
data_test = data[size+1:]

p_range = range(0,4)
d_range = range(0,3)
q_range = range(0,4)
P_range = range(0,4)
D_range = range(0,3)
Q_range = range(0,4)
s = 2

MAE = 99999999999999
for P1 in p_range:
    for D1 in d_range:
        for Q1 in q_range:
            try:
                print("ARIMA: ", P1, D1, Q1)
                model = sm.tsa.ARIMA(data_train, order=(P1,D1,Q1))
                results = model.fit()
                n = len(data_test)
                forecast = results.forecast(n)
                mae = np.mean(np.abs(data_test-forecast))
                if mae < MAE:
                    MAE = mae
                    p = P1
                    d = D1
                    q = Q1
            except:
                continue

for P1 in p_range:
    for D1 in d_range:
        for Q1 in q_range:
            for P2 in P_range:
                for D2 in D_range:
                    for Q2 in Q_range:
                        try:
                            print("SARIMA: ", P1, D1, Q1, P2, D2, Q2, s)
                            model = sm.tsa.ARIMA(data_train, order=(P1,D1,Q1), seasonal_order=(P2,D2,Q2,s))
                            results = model.fit()
                            n = len(data_test)
                            forecast = results.forecast(n)
                            mae = np.mean(np.abs(data_test - forecast))
                            if mae < MAE:
                                MAE = mae
                                p = P1
                                d = D1
                                q = Q1
                                P = P2
                                D = D2
                                Q = Q2
                        except:
                            continue

try:
    model = sm.tsa.ARIMA(data, order=(p,d,q), seasonal_order=(P,D,Q,s))
except:
    model = sm.tsa.ARIMA(data, order=(p,d,q))

results = model.fit()
n = 4
forecast = results.forecast(n)

print("")
print("MAE is: ", MAE)
print("p, d, q: ", p, d, q)
try:
    print("P, D, Q, s: ",P, D, Q, s)
except:
    pass
print("")
print("Forecasting Model Results")
print(pd.Series(forecast))

df2 = pd.Series(forecast)
with pd.ExcelWriter(r"C:\Users\EDANIX_1\Downloads\SARIMA Forecast.xlsx") as writer:
    df2.to_excel(writer,"SARIMA Model Forecast")
