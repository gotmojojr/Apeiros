import numpy as np
import yfinance as yf
from sympy import symbols, expand, collect
np.set_printoptions(linewidth=np.inf)
np.set_printoptions(precision=None, suppress=True, linewidth=np.inf)

stock=input("Stock Ticker: ")
k = input("Type Strike Price: ")
n = input("Type Number of Periods: ")
cp = input("Type C for call, P for put: ")
prem = input("Type Premium: ")
ticker_caps=stock.upper()
period="1y"
interval="1d"

#Call Option
now = yf.download(ticker_caps,period=period,interval=interval)
S = now['Close'].iloc[-1]
K = float(k)
avg = np.mean(now['Close'])
std = np.std(now['Close'])
V = (std/avg)/252
now['Return'] = now['Close'] - now['Open']
c = 0
for x in now['Return']:
    if x > 0:
        c = c + 1
u = c/len(now['Return'])
d = 1-u
N = int(n)

#Stock tree
box = np.zeros(shape=(N+1,N+1))
box[0,0] = S
for i in range(1, N + 1):
    prev = box[0,i-1]
    box[0,i] = (prev + V*prev)
    for j in range(1,i+1):
        previous = box[j-1,i-1]
        box[j,i] = (previous - V*previous)
print(" ")
print("STOCK TREE")
print(box)

#Probability Tree
pox = np.zeros(shape=(N+1,N+1))
pox[0,1] = u
pox[1,1] = d
for i in range(2,N+1):
    prev = pox[0, i - 1]
    pox[0,i] = prev*u
    pox[1,i] = prev*d
    for j in range(2,N+1):
        previous = pox[j-1,i-1]
        pox[j,i] = previous*d



#Pascal's Triangle
def pascals_triangle(N):
    triangle = np.zeros((N, N), dtype=int)
    for i in range(N):
        for j in range(i + 1):
            if j == 0 or j == i:
                triangle[i, j] = 1
            else:
                triangle[i, j] = triangle[i-1, j-1] + triangle[i-1, j]
    return triangle[:, :i+1]

# Generate Pascal's Triangle with 10 rows
n_rows = N+1
pascals_array = pascals_triangle(n_rows)
pascals_array = pascals_array.T

pox = pox*pascals_array
print(" ")
print("PROBABILITY TREE")
print(pox)

#Expected Value of Stock
exp_val = np.dot(box[:,-1],pox[:,-1])

#Option Price
cp = cp.upper()
prem = float(prem)
if cp == 'C':
    profit = (exp_val-K)-prem
elif cp == 'P':
    profit = (K-exp_val)-prem


print(" ")
print("The Expected option price at the end of N periods is: ",exp_val)
print("The Expected Profit for the chosen option is: ",float(profit))

